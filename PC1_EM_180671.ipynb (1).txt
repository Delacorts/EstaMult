{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import plotly.express as px\n",
        "import seaborn as sns\n",
        "import sklearn\n",
        "\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "iris2 = pd.read_csv(r'/content/drive/My Drive/Datasets/IRIS.csv')\n",
        "iris2"
      ],
      "metadata": {
        "id": "AL8IeHdWsGRv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "url = \"https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data\"\n",
        "column_names = [\"sepal_length\", \"sepal_width\", \"petal_length\", \"petal_width\", \"species\"]\n",
        "iris3 = pd.read_csv(url, header=None, names=column_names)\n",
        "iris3.head()\n",
        "#Primera filas del DF\n",
        "iris4 = load_iris()\n",
        "iris4_df = pd.DataFrame(data=iris4.data, columns=iris4.feature_names)\n",
        "iris4_df['species'] = iris4.target\n",
        "iris4_df"
      ],
      "metadata": {
        "id": "Ft-elB2poxca"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X = iris4_df.drop('species', axis=1)\n",
        "y = iris4_df['species']\n",
        "X_media = X - np.mean(X, axis=0)\n",
        "X_std = X_media / np.std(X, axis=0)\n",
        "cov_matrix = np.cov(X_std, rowvar=False)\n",
        "cov_matrix\n",
        "eigen_values, eigen_vectors = np.linalg.eigh(cov_matrix)\n",
        "eigen_values_index = np.argsort(eigen_values)[::-1]\n",
        "eigen_values_chamber = eigen_values[eigen_values_index]\n",
        "eigen_vectors_chamber = eigen_vectors[:, eigen_values_index]\n",
        "eigen_values_chamber\n",
        "\n",
        "eigen_values_chamber\n",
        "\n",
        "eigen_vectors_chamber\n",
        "\n",
        "eigen_subset = eigen_vectors_chamber[:, 0 :2]\n",
        "eigen_subset\n",
        "\n",
        "X_red = np.dot(eigen_subset.transpose(), X_std.transpose()).transpose()\n",
        "X_red"
      ],
      "metadata": {
        "id": "965jkLKppF2L"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "principal_df = pd.DataFrame(X_red, columns=['PC1', 'PC2'])\n",
        "principal_df\n",
        "principal_df = pd.concat([principal_df, iris4_df[['species']]], axis=1)\n",
        "principal_df\n",
        "fig = px.scatter(principal_df, x='PC1', y='PC2', color='species')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "8HLlX0PIpQuM"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}